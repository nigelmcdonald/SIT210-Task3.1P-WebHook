// This #include statement was automatically added by the Particle IDE.
#include <JsonParserGeneratorRK.h>

int led = D7;  // The on-board LED
int DHpin = 6;  // pin for the sensor
byte dat [5]; // byte array to hold the sensor values

void createJsonObject(int temperature, int humidity) {
    JsonWriterStatic<256> jsonWriter;
    {
        JsonWriterAutoObject obj(&jsonWriter);
        jsonWriter.insertKeyValue("temperature", temperature);
        jsonWriter.insertKeyValue("humidity", humidity);
    }
    Particle.publish("temp", jsonWriter.getBuffer(), PRIVATE, NO_ACK);  // perform the Publish
}

//initialization
void setup () {
    pinMode(led, OUTPUT);
    pinMode (DHpin, OUTPUT);
}

//main loop
void loop () {
    digitalWrite(led, HIGH);   // Turn ON the LED
    start_test ();
    
    createJsonObject(dat [2], dat [0]); // 2=temp, 0=hum dat [1], dat [3] hold the decimal accuracy of the values
    delay(1000); //LED on for 1 second
    digitalWrite(led, LOW);   // Turn Off the LED
    
    delay(9000); // full cycle is 10 seconds

}

//function to read byte data using digitalRead function
byte read_data () {
    byte data;
    for (int i = 0; i < 8; i ++) {
        if (digitalRead (DHpin) == LOW) {
            while (digitalRead (DHpin) == LOW); // wait for 50us
            delayMicroseconds (30); // determine the duration of the high level to determine the data is '0 'or '1'
        if (digitalRead (DHpin) == HIGH)
            data |= (1 << (7-i)); // high front and low in the post
        while (digitalRead (DHpin) == HIGH); // data '1 ', wait for the next one receiver
        }
    }
    return data;
}

//this function handles polling the sensor so data can be read
void start_test () {
    digitalWrite (DHpin, LOW); // bus down, send start signal
    delay (30); // delay greater than 18ms, so DHT11 start signal can be detected
    digitalWrite (DHpin, HIGH);
    delayMicroseconds (40); // Wait for DHT11 response
    pinMode (DHpin, INPUT);
    while (digitalRead (DHpin) == HIGH);
        delayMicroseconds (80); // DHT11 response, pulled the bus 80us
    if (digitalRead (DHpin) == LOW);
        delayMicroseconds (80); // DHT11 80us after the bus pulled to start sending data
    for (int i = 0; i < 4; i ++) // receive temperature and humidity data, the parity bit is not considered
    dat[i] = read_data ();
    pinMode (DHpin, OUTPUT);
    digitalWrite (DHpin, HIGH); // send data once after releasing the bus, wait for the host to open the next Start signal
}